// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  passwordHash String
  createdAt    DateTime    @default(now())
  restaurant   Restaurant?
}

model Restaurant {
  id          String   @id @default(cuid())
  name        String?
  logoUrl     String?
  address     String?
  currency    String?   @default("NPR")
  timeZone    String?   @default("Asia/Kathmandu")
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tables      Table[]
  menuCategories MenuCategory[]
  menuItems   MenuItem[]
  menus       Menu[]
  orders      Order[]
  // menuConfig  MenuConfig? // removed for multi-menu support
}

model Table {
  id            String      @id @default(cuid())
  name          String
  description   String?
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId  String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt @default(now())
  orders        Order[]
}

model MenuCategory {
  id            String   @id @default(cuid())
  name          String
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId  String
  visible       Boolean  @default(true)
  order         Int      @default(0)
  items         MenuItem[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model MenuItem {
  id             String   @id @default(cuid())
  name           String
  description    String?
  price          Float
  imageUrl       String?
  isAvailable    Boolean  @default(true)
  visible        Boolean  @default(true)
  badge          String?
  category       MenuCategory @relation(fields: [categoryId], references: [id])
  categoryId     String
  restaurant     Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Menu {
  id           String   @id @default(cuid())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  name         String
  layout       Json
  published    Boolean  @default(false)
  updatedAt    DateTime @updatedAt
}

model Order {
  id           String   @id @default(cuid())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  table        Table     @relation(fields: [tableId], references: [id])
  tableId      String
  status       OrderStatus @default(PENDING)
  isLocked     Boolean  @default(false)
  paid         Boolean  @default(false)
  createdVia   OrderSource
  note         String?
  total        Float    @default(0)
  items        OrderItem[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PREPARING
  COMPLETED
  CANCELED
}

enum OrderSource {
  CUSTOMER
  STAFF
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  itemId    String
  name      String
  price     Float
  quantity  Int
  note      String?
}
